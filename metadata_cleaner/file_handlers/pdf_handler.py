from pypdf import PdfReader, PdfWriter
import os
from typing import Optional
from metadata_cleaner.logs.logger import logger


def remove_pdf_metadata(file_path: str, output_path: Optional[str] = None) -> Optional[str]:
    """
    Removes metadata from a PDF file by copying its pages into a new PDF without metadata.

    Args:
        file_path (str): Path to the PDF file.
        output_path (Optional[str]): Destination path for the cleaned PDF.
                                     If None, a new file name is generated by appending '_cleaned'
                                     before the file extension.

    Returns:
        Optional[str]: The path to the cleaned PDF if successful; otherwise, None.
    """
    try:
        # Ensure the file exists
        if not os.path.exists(file_path):
            logger.error(f"❌ PDF file not found: {file_path}")
            return None

        # Load PDF
        reader = PdfReader(file_path)

        # Check for password protection
        if reader.is_encrypted:
            logger.error(f"❌ PDF is encrypted and cannot be processed: {file_path}")
            return None

        writer = PdfWriter()

        # Copy each page to the writer
        for page in reader.pages:
            writer.add_page(page)

        # Explicitly clear all metadata
        writer.add_metadata({})

        # Determine output path
        if not output_path:
            base, ext = os.path.splitext(file_path)
            output_path = f"{base}_cleaned{ext}"

        # Write cleaned PDF
        with open(output_path, "wb") as f:
            writer.write(f)

        logger.info(f"✅ Metadata removed successfully: {output_path}")
        return output_path

    except Exception as e:
        logger.error(f"❌ Error removing metadata from PDF {file_path}: {e}", exc_info=True)
        return None
