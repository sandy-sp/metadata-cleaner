import os
import shutil
from typing import Optional
from mutagen.mp3 import MP3, EasyID3
from mutagen.flac import FLAC
from mutagen.oggvorbis import OggVorbis
from mutagen.wavpack import WavPack
from mutagen.aac import AAC
from metadata_cleaner.logs.logger import logger


def remove_audio_metadata(file_path: str, output_path: Optional[str] = None) -> Optional[str]:
    """
    Removes metadata from various audio file formats using Mutagen.

    Args:
        file_path (str): The path to the audio file.
        output_path (Optional[str]): The destination path for the cleaned file.
                                     If None, a new file name is generated by appending '_cleaned' before the extension.

    Returns:
        Optional[str]: The path to the cleaned file if successful, otherwise None.
    """
    try:
        # Ensure the file exists
        if not os.path.exists(file_path):
            logger.error(f"❌ Audio file not found: {file_path}")
            return None

        # Determine file format
        ext = os.path.splitext(file_path)[1].lower()

        # Select the appropriate metadata handler
        if ext in {".mp3"}:
            audio = MP3(file_path, ID3=EasyID3)
        elif ext in {".flac"}:
            audio = FLAC(file_path)
        elif ext in {".ogg"}:
            audio = OggVorbis(file_path)
        elif ext in {".wav"}:
            audio = WavPack(file_path)
        elif ext in {".aac"}:
            audio = AAC(file_path)
        else:
            logger.error(f"❌ Unsupported audio format: {ext}")
            return None

        # Remove metadata and save
        audio.delete()
        audio.save()

        # Determine output path if not provided
        if not output_path:
            base, ext = os.path.splitext(file_path)
            output_path = f"{base}_cleaned{ext}"

        # Copy file to new location
        shutil.copy(file_path, output_path)

        logger.info(f"✅ Metadata removed successfully: {output_path}")
        return output_path

    except Exception as e:
        logger.error(f"❌ Error removing metadata from {file_path}: {e}", exc_info=True)
        return None
